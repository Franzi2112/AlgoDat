a) Geben Sie Pseudocode für einen Algorithmus an, der für ein gegebenes Array A[1, n]
mit Werten aus N die Summe aller Einträge von A berechnet, deren Wert ein Vielfaches
von 3 ist, oder 0 ausgibt, falls A keine Vielfachen von 3 enthält. Was ist die Laufzeit
Ihres Algorithmus?

Input: ein Array A[1, n] mit Werten aus N
Result  ein int Wert, der die Summe aller Einträge von A berechnet, deren Wert ein Vielfaches von 3 ist, oder 0 ausgibt, falls A keine Vielfachen von 3 enthält.

sum :=0                     | O(1)
for i:=1 to n do            | O(n)
  if A[i] mod 3 = 0 then    | O(1)
    sum := sum + A[i]       | O(1)
return sum                  | O(1)

Laufzeit ist O(n)


b) Zeigen Sie die Korrektheit Ihres Algorithmus. Verwenden Sie dazu eine passende Schlei-
feninvariante.

Initialisierung: sum =0= die summe aller Vielfachen von 3 im Teilarray A[1, 0].

Invariante: die sum Variable speichert die Summe aller Vielfachen von 3 im teilarray A[1, i-1]
für das i-te Element wird geprüft ob es ein Vielfaches von 3 ist, wenn das der Fall ist, wird die sum Variable aktualisiert und i wird um 1 erhöht.
die Invariante bleibt damit bestehen.

Terminierung: am ende der schleife ist i= n+1, damit sind laut invariante alle vielfachen von 3 des Array A[1,n] in sum aufsummiert.
Falls keine vielfachen von 3 im array lagen, ist sum = 0.Das ist ebenfalls richtig.